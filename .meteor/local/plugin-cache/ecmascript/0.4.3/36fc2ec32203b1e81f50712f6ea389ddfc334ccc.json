{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/templates/js/invoices.js","filenameRelative":"/client/templates/js/invoices.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/templates/js/invoices.js.map","sourceFileName":"/client/templates/js/invoices.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"invoices"},"ignored":false,"code":"Router.setRoute('invoices');\n\nTemplateController('invoicesTemplate', {\n  helpers: {\n    invoiceData: function () {\n      function invoiceData() {\n        var react = Router.reactvar.get();\n        return invoices.byTimeRange(Router.getParams().type, Router.getQueryParams());\n      }\n\n      return invoiceData;\n    }(),\n    direction: function () {\n      function direction(params) {\n        if (params === undefined) return '';else if (params === 'ASC') return 'up';else return 'down';\n      }\n\n      return direction;\n    }(),\n    searchAllowedData: function () {\n      function searchAllowedData() {\n        return [{\n          name: 'invoicenr',\n          type: 'integer',\n          step: 1,\n          placeholder: 'Invoice Number'\n        }, {\n          name: 'total',\n          type: 'integer',\n          step: 1,\n          placeholder: 'Total'\n        }, {\n          name: 'date',\n          type: 'date',\n          placeholder: 'Select or type a date'\n        }, {\n          name: 'email',\n          type: 'text',\n          placeholder: 'Email address'\n        }];\n      }\n\n      return searchAllowedData;\n    }()\n  },\n  events: {\n    'click .today': function () {\n      function clickToday() {\n        Router.go({ type: 'today' });\n      }\n\n      return clickToday;\n    }(),\n    'click .week': function () {\n      function clickWeek() {\n        Router.go({ type: 'week' });\n      }\n\n      return clickWeek;\n    }(),\n    'click .month': function () {\n      function clickMonth() {\n        Router.go({ type: 'month' });\n      }\n\n      return clickMonth;\n    }(),\n    'click .all': function () {\n      function clickAll() {\n        Router.go({ type: 'all' });\n      }\n\n      return clickAll;\n    }(),\n    'click .generate': function () {\n      function clickGenerate() {\n        Meteor.call('generateInvoices');\n      }\n\n      return clickGenerate;\n    }(),\n    'click .filterInvoiceNr': function () {\n      function clickFilterInvoiceNr() {\n        Router.go('', 'sortInvoiceNr');\n      }\n\n      return clickFilterInvoiceNr;\n    }(),\n    'click .filterTotal': function () {\n      function clickFilterTotal() {\n        Router.go('', 'sortTotal');\n      }\n\n      return clickFilterTotal;\n    }(),\n    'click .filterCreatedAt': function () {\n      function clickFilterCreatedAt() {\n        Router.go('', 'sortCreatedAt');\n      }\n\n      return clickFilterCreatedAt;\n    }(),\n    'click .resetQuery': function () {\n      function clickResetQuery() {\n        Router.resetQuery();\n      }\n\n      return clickResetQuery;\n    }(),\n    'parseSearchFilter': function () {\n      function parseSearchFilter(e, tpl, args) {\n        var filter = {};\n        console.log(args);\n        if (args.filter.length > 1) {\n          args.filter.forEach(function (part) {});\n        }\n      }\n\n      return parseSearchFilter;\n    }()\n  }\n});\n\nTemplate.registerHelper('formatDate', function (date) {\n  return moment(date).format('DD-MM-YYYY');\n});","ast":null,"map":{"version":3,"sources":["/client/templates/js/invoices.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,CAAgB,UAAhB;;AAEA,mBAAmB,kBAAnB,EAAuC;AACrC,WAAQ;AACN;6BAAa;AACX,YAAI,QAAQ,OAAO,QAAP,CAAgB,GAAhB,EAAR,CADO;AAEX,eAAO,SAAS,WAAT,CAAqB,OAAO,SAAP,GAAmB,IAAnB,EAAyB,OAAO,cAAP,EAA9C,CAAP,CAFW;;;;OADP;AAKN;yBAAU,QAAO;AACf,YAAI,WAAW,SAAX,EACF,OAAO,EAAP,CADF,KAEK,IAAI,WAAW,KAAX,EACP,OAAO,IAAP,CADG,KAGH,OAAO,MAAP,CAHG;;;;OARD;AAcN;mCAAoB;AAClB,eAAO,CACL;AACE,gBAAM,WAAN;AACA,gBAAM,SAAN;AACA,gBAAM,CAAN;AACA,uBAAa,gBAAb;SALG,EAMH;AACA,gBAAM,OAAN;AACA,gBAAM,SAAN;AACA,gBAAM,CAAN;AACA,uBAAa,OAAb;SAVG,EAWH;AACA,gBAAM,MAAN;AACA,gBAAM,MAAN;AACA,uBAAa,uBAAb;SAdG,EAeH;AACA,gBAAM,OAAN;AACA,gBAAM,MAAN;AACA,uBAAa,eAAb;SAlBG,CAAP,CADkB;;;;OAdd;GAAR;AAsCA,UAAQ;AACN;4BAAiB;AACf,eAAO,EAAP,CAAU,EAAC,MAAM,OAAN,EAAX,EADe;;;;OADX;AAIN;2BAAgB;AACd,eAAO,EAAP,CAAU,EAAC,MAAM,MAAN,EAAX,EADc;;;;OAJV;AAON;4BAAiB;AACf,eAAO,EAAP,CAAU,EAAC,MAAM,OAAN,EAAX,EADe;;;;OAPX;AAUN;0BAAe;AACb,eAAO,EAAP,CAAU,EAAC,MAAM,KAAN,EAAX,EADa;;;;OAVT;AAaN;+BAAoB;AAClB,eAAO,IAAP,CAAY,kBAAZ,EADkB;;;;OAbd;AAgBN;sCAA2B;AACzB,eAAO,EAAP,CAAU,EAAV,EAAc,eAAd,EADyB;;;;OAhBrB;AAmBN;kCAAuB;AACrB,eAAO,EAAP,CAAU,EAAV,EAAc,WAAd,EADqB;;;;OAnBjB;AAsBN;sCAA2B;AACzB,eAAO,EAAP,CAAU,EAAV,EAAc,eAAd,EADyB;;;;OAtBrB;AAyBN;iCAAsB;AACpB,eAAO,UAAP,GADoB;;;;OAzBhB;AA4BN;iCAAoB,GAAG,KAAK,MAAM;AAChC,YAAI,SAAS,EAAT,CAD4B;AAEhC,gBAAQ,GAAR,CAAY,IAAZ,EAFgC;AAGhC,YAAG,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAArB,EAAwB;AACzB,eAAK,MAAL,CAAY,OAAZ,CAAoB,UAAS,IAAT,EAAc,EAAd,CAApB,CADyB;SAA3B;;;;OA/BI;GAAR;CAvCF;;AAgFA,SAAS,cAAT,CAAwB,YAAxB,EAAsC,UAAU,IAAV,EAAgB;AACpD,SAAO,OAAO,IAAP,EAAa,MAAb,CAAoB,YAApB,CAAP,CADoD;CAAhB,CAAtC","file":"/client/templates/js/invoices.js.map","sourcesContent":["Router.setRoute('invoices');\r\n\r\nTemplateController('invoicesTemplate', {\r\n  helpers:{\r\n    invoiceData(){\r\n      var react = Router.reactvar.get();\r\n      return invoices.byTimeRange(Router.getParams().type, Router.getQueryParams());\r\n    },\r\n    direction(params){\r\n      if (params === undefined)\r\n        return '';\r\n      else if (params === 'ASC')\r\n        return 'up';\r\n      else\r\n        return 'down';\r\n\r\n    },\r\n    searchAllowedData() {\r\n      return [\r\n        {\r\n          name: 'invoicenr',\r\n          type: 'integer',\r\n          step: 1,\r\n          placeholder: 'Invoice Number'\r\n        },{\r\n          name: 'total',\r\n          type: 'integer',\r\n          step: 1,\r\n          placeholder: 'Total'\r\n        },{\r\n          name: 'date',\r\n          type: 'date',\r\n          placeholder: 'Select or type a date'\r\n        },{\r\n          name: 'email',\r\n          type: 'text',\r\n          placeholder: 'Email address'\r\n        }\r\n      ];\r\n    }\r\n  },\r\n  events: {\r\n    'click .today'() {\r\n      Router.go({type: 'today'});\r\n    },\r\n    'click .week'() {\r\n      Router.go({type: 'week'});\r\n    },\r\n    'click .month'() {\r\n      Router.go({type: 'month'});\r\n    },\r\n    'click .all'() {\r\n      Router.go({type: 'all'});\r\n    },\r\n    'click .generate'() {\r\n      Meteor.call('generateInvoices');\r\n    },\r\n    'click .filterInvoiceNr'() {\r\n      Router.go('', 'sortInvoiceNr');\r\n    },\r\n    'click .filterTotal'() {\r\n      Router.go('', 'sortTotal');\r\n    },\r\n    'click .filterCreatedAt'() {\r\n      Router.go('', 'sortCreatedAt');\r\n    },\r\n    'click .resetQuery'() {\r\n      Router.resetQuery();\r\n    },\r\n    'parseSearchFilter'(e, tpl, args) {\r\n      let filter = {};\r\n      console.log(args);\r\n      if(args.filter.length > 1) {\r\n        args.filter.forEach(function(part){\r\n\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nTemplate.registerHelper('formatDate', function (date) {\r\n  return moment(date).format('DD-MM-YYYY');\r\n});"]},"hash":"36fc2ec32203b1e81f50712f6ea389ddfc334ccc"}
