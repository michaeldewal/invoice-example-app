{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/lib/invoiceCollection.js","filenameRelative":"/lib/invoiceCollection.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/invoiceCollection.js.map","sourceFileName":"/lib/invoiceCollection.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"invoiceCollection"},"ignored":false,"code":"invoices = new Mongo.Collection(\"invoices\");\ninvoices.limit_results_by = 50;\ninvoices.limit_increase_by = 50;\ninvoices.byTimeRange = function () {\n  var timeRange = arguments.length <= 0 || arguments[0] === undefined ? \"today\" : arguments[0];\n  var queryParams = arguments[1];\n\n  var limit = {};\n\n  if (queryParams !== undefined && queryParams.hasOwnProperty('limit')) {\n    limit = parseInt(queryParams.limit);\n    delete queryParams['limit'];\n  }\n\n  queryParams = isEmpty(queryParams) ? { sortCreatedAt: \"DESC\", sortTotal: \"ASC\" } : queryParams;\n\n  var sort = {};\n  for (var k in meteorBabelHelpers.sanitizeForInObject(queryParams)) {\n    sort[k.replace('sort', '').firstToType('lower')] = queryParams[k] === 'DESC' ? -1 : 1;\n  }\n\n  var selectedDate = void 0;\n  var today = new Date();\n  switch (timeRange) {\n    case 'week':\n      selectedDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);\n      break;\n    case 'month':\n      selectedDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n      break;\n    case 'all':\n      selectedDate = false;\n      break;\n    default:\n    case 'today':\n      selectedDate = today;\n      selectedDate.setSeconds(0);\n      selectedDate.setHours(0);\n      selectedDate.setMinutes(0);\n      break;\n  }\n\n  var filter = selectedDate !== false ? { createdAt: { '$gte': selectedDate } } : {};\n  return invoices.find(filter, { sort: sort, limit: limit });\n};","ast":null,"map":{"version":3,"sources":["/lib/invoiceCollection.js"],"names":[],"mappings":"AAAA,WAAW,IAAI,MAAM,UAAN,CAAiB,UAArB,CAAX;AACA,SAAS,gBAAT,GAA4B,EAA5B;AACA,SAAS,iBAAT,GAA6B,EAA7B;AACA,SAAS,WAAT,GAAuB,YAA2C;MAAlC,kEAAY,uBAAsB;MAAb,2BAAa;;AAChE,MAAI,QAAQ,EAAR,CAD4D;;AAGhE,MAAI,gBAAgB,SAAhB,IAA6B,YAAY,cAAZ,CAA2B,OAA3B,CAA7B,EAAkE;AACpE,YAAQ,SAAS,YAAY,KAAZ,CAAjB,CADoE;AAEpE,WAAO,YAAY,OAAZ,CAAP,CAFoE;GAAtE;;AAKA,gBAAc,OAAC,CAAQ,WAAR,CAAD,GAAyB,EAAC,eAAe,MAAf,EAAuB,WAAW,KAAX,EAAjD,GAAqE,WAArE,CARkD;;AAUhE,MAAM,OAAO,EAAP,CAV0D;AAWhE,OAAK,IAAI,CAAJ,2CAAS,YAAd,EAA2B;AACzB,SAAK,EAAE,OAAF,CAAU,MAAV,EAAkB,EAAlB,EAAsB,WAAtB,CAAkC,OAAlC,CAAL,IAAmD,WAAC,CAAY,CAAZ,MAAmB,MAAnB,GAA6B,CAAC,CAAD,GAAK,CAAnC,CAD1B;GAA3B;;AAIA,MAAI,qBAAJ,CAfgE;AAgBhE,MAAM,QAAQ,IAAI,IAAJ,EAAR,CAhB0D;AAiBhE,UAAQ,SAAR;AACE,SAAK,MAAL;AACE,qBAAe,IAAI,IAAJ,CAAS,MAAM,WAAN,EAAT,EAA8B,MAAM,QAAN,EAA9B,EAAgD,MAAM,OAAN,KAAkB,CAAlB,CAA/D,CADF;AAEE,YAFF;AADF,SAIO,OAAL;AACE,qBAAe,IAAI,IAAJ,CAAS,MAAM,WAAN,EAAT,EAA8B,MAAM,QAAN,KAAmB,CAAnB,EAAsB,MAAM,OAAN,EAApD,CAAf,CADF;AAEE,YAFF;AAJF,SAOO,KAAL;AACE,qBAAe,KAAf,CADF;AAEE,YAFF;AAPF;AAWE,SAAK,OAAL;AACE,qBAAe,KAAf,CADF;AAEE,mBAAa,UAAb,CAAwB,CAAxB,EAFF;AAGE,mBAAa,QAAb,CAAsB,CAAtB,EAHF;AAIE,mBAAa,UAAb,CAAwB,CAAxB,EAJF;AAKE,YALF;AAXF,GAjBgE;;AAoC1D,MAAM,SAAS,YAAC,KAAiB,KAAjB,GAAwB,EAAE,WAAW,EAAE,QAAQ,YAAR,EAAb,EAA3B,GAAgE,EAAhE,CApC2C;AAqC9D,SAAO,SAAS,IAAT,CAAc,MAAd,EAAsB,EAAC,MAAM,IAAN,EAAY,OAAO,KAAP,EAAnC,CAAP,CArC8D;CAA3C","file":"/lib/invoiceCollection.js.map","sourcesContent":["invoices = new Mongo.Collection(\"invoices\");\r\ninvoices.limit_results_by = 50;\r\ninvoices.limit_increase_by = 50;\r\ninvoices.byTimeRange = function(timeRange = \"today\", queryParams) {\r\n  let limit = {};\r\n\r\n  if (queryParams !== undefined && queryParams.hasOwnProperty('limit')) {\r\n    limit = parseInt(queryParams.limit);\r\n    delete queryParams['limit'];\r\n  }\r\n\r\n  queryParams = (isEmpty(queryParams)) ? {sortCreatedAt: \"DESC\", sortTotal: \"ASC\"} : queryParams;\r\n\r\n  const sort = {};\r\n  for (let k in queryParams) {\r\n    sort[k.replace('sort', '').firstToType('lower')] = (queryParams[k] === 'DESC') ? -1 : 1;\r\n  }\r\n\r\n  let selectedDate;\r\n  const today = new Date();\r\n  switch (timeRange) {\r\n    case 'week':\r\n      selectedDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);\r\n      break;\r\n    case 'month':\r\n      selectedDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\r\n      break;\r\n    case 'all':\r\n      selectedDate = false;\r\n      break;\r\n    default:\r\n    case 'today':\r\n      selectedDate = today;\r\n      selectedDate.setSeconds(0);\r\n      selectedDate.setHours(0);\r\n      selectedDate.setMinutes(0);\r\n      break;\r\n  }\r\n\r\n        const filter = (selectedDate !== false)?{ createdAt: { '$gte': selectedDate }}:{};\r\n    return invoices.find(filter, {sort: sort, limit: limit});\r\n};"]},"hash":"7e6836526032bc0ac2b0729a780d9c8a37bd624b"}
