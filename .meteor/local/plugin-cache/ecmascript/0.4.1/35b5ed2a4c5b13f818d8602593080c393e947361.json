{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/lib/invoiceCollection.js","filenameRelative":"/lib/invoiceCollection.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/invoiceCollection.js.map","sourceFileName":"/lib/invoiceCollection.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"invoiceCollection"},"ignored":false,"code":"invoices = new Mongo.Collection(\"invoices\");\ninvoices.byTimeRange = function () {\n    var timeRange = arguments.length <= 0 || arguments[0] === undefined ? \"today\" : arguments[0];\n    var queryParams = arguments[1];\n\n    var limit = 100;\n    if (queryParams.hasOwnProperty('limit')) {\n        limit = parseInt(queryParams.limit);\n        delete queryParams['limit'];\n    }\n\n    queryParams = isEmpty(queryParams) ? { sortCreatedAt: \"DESC\", sortTotal: \"ASC\" } : queryParams;\n\n    var sort = {};\n    for (var k in meteorBabelHelpers.sanitizeForInObject(queryParams)) {\n        sort[k.replace('sort', '').firstToType('lower')] = queryParams[k] === 'DESC' ? -1 : 1;\n    }\n\n    var selectedDate = void 0;\n    var today = new Date();\n    switch (timeRange) {\n        case 'week':\n            selectedDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);\n            break;\n        case 'month':\n            selectedDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n            break;\n        case 'all':\n            selectedDate = false;\n            break;\n        default:\n        case 'today':\n            selectedDate = today;\n            selectedDate.setSeconds(0);\n            selectedDate.setHours(0);\n            selectedDate.setMinutes(0);\n            break;\n    }\n\n    var filter = selectedDate !== false ? { createdAt: { '$gte': selectedDate } } : {};\n\n    return invoices.find(filter, { sort: sort, limit: limit });\n};","ast":null,"map":{"version":3,"sources":["/lib/invoiceCollection.js"],"names":[],"mappings":"AAAA,WAAW,IAAI,MAAM,UAAN,CAAiB,UAArB,CAAX;AACA,SAAS,WAAT,GAAuB,YAA2C;QAAlC,kEAAY,uBAAsB;QAAb,2BAAa;;AAC1D,QAAI,QAAQ,GAAR,CADsD;AAE1D,QAAG,YAAY,cAAZ,CAA2B,OAA3B,CAAH,EAAwC;AACpC,gBAAQ,SAAS,YAAY,KAAZ,CAAjB,CADoC;AAEpC,eAAO,YAAY,OAAZ,CAAP,CAFoC;KAAxC;;AAKA,kBAAc,OAAC,CAAQ,WAAR,CAAD,GAAuB,EAAC,eAAe,MAAf,EAAuB,WAAW,KAAX,EAA/C,GAAiE,WAAjE,CAP4C;;AAS1D,QAAM,OAAO,EAAP,CAToD;AAU1D,SAAK,IAAI,CAAJ,2CAAS,YAAd,EAA2B;AACvB,aAAK,EAAE,OAAF,CAAU,MAAV,EAAkB,EAAlB,EAAsB,WAAtB,CAAkC,OAAlC,CAAL,IAAmD,WAAC,CAAY,CAAZ,MAAmB,MAAnB,GAA2B,CAAC,CAAD,GAAG,CAA/B,CAD5B;KAA3B;;AAIA,QAAI,qBAAJ,CAd0D;AAe1D,QAAM,QAAQ,IAAI,IAAJ,EAAR,CAfoD;AAgB1D,YAAO,SAAP;AACI,aAAK,MAAL;AACI,2BAAe,IAAI,IAAJ,CAAS,MAAM,WAAN,EAAT,EAA8B,MAAM,QAAN,EAA9B,EAAgD,MAAM,OAAN,KAAkB,CAAlB,CAA/D,CADJ;AAEI,kBAFJ;AADJ,aAIS,OAAL;AACI,2BAAe,IAAI,IAAJ,CAAS,MAAM,WAAN,EAAT,EAA8B,MAAM,QAAN,KAAmB,CAAnB,EAAsB,MAAM,OAAN,EAApD,CAAf,CADJ;AAEI,kBAFJ;AAJJ,aAOS,KAAL;AACI,2BAAe,KAAf,CADJ;AAEA,kBAFA;AAPJ;AAWI,aAAK,OAAL;AACI,2BAAe,KAAf,CADJ;AAEI,yBAAa,UAAb,CAAwB,CAAxB,EAFJ;AAGI,yBAAa,QAAb,CAAsB,CAAtB,EAHJ;AAII,yBAAa,UAAb,CAAwB,CAAxB,EAJJ;AAKI,kBALJ;AAXJ,KAhB0D;;AAmC1D,QAAM,SAAS,YAAC,KAAiB,KAAjB,GAAwB,EAAE,WAAW,EAAE,QAAQ,YAAR,EAAb,EAA3B,GAAgE,EAAhE,CAnC2C;;AAqC9D,WAAO,SAAS,IAAT,CAAc,MAAd,EAAsB,EAAC,MAAM,IAAN,EAAY,OAAO,KAAP,EAAnC,CAAP,CArC8D;CAA3C","file":"/lib/invoiceCollection.js.map","sourcesContent":["invoices = new Mongo.Collection(\"invoices\");\r\ninvoices.byTimeRange = function(timeRange = \"today\", queryParams) {\r\n        let limit = 100;\r\n        if(queryParams.hasOwnProperty('limit')) {\r\n            limit = parseInt(queryParams.limit);\r\n            delete queryParams['limit'];\r\n        }\r\n\r\n        queryParams = (isEmpty(queryParams))?{sortCreatedAt: \"DESC\", sortTotal: \"ASC\"}:queryParams;\r\n\r\n        const sort = {};\r\n        for (let k in queryParams) {\r\n            sort[k.replace('sort', '').firstToType('lower')] = (queryParams[k] === 'DESC')?-1:1;\r\n        }\r\n\r\n        let selectedDate;\r\n        const today = new Date();\r\n        switch(timeRange) {\r\n            case 'week':\r\n                selectedDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);\r\n                break;\r\n            case 'month':\r\n                selectedDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\r\n                break;\r\n            case 'all':\r\n                selectedDate = false;\r\n            break;\r\n            default:\r\n            case 'today':\r\n                selectedDate = today;\r\n                selectedDate.setSeconds(0);\r\n                selectedDate.setHours(0);\r\n                selectedDate.setMinutes(0);\r\n                break;\r\n        }\r\n\r\n        const filter = (selectedDate !== false)?{ createdAt: { '$gte': selectedDate }}:{};\r\n\r\n    return invoices.find(filter, {sort: sort, limit: limit});\r\n};"]},"hash":"35b5ed2a4c5b13f818d8602593080c393e947361"}
