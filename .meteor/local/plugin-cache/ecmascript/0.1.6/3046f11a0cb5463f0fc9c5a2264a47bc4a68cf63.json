{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"invoices = new Mongo.Collection(\"invoices\");\nMeteor.publish(\"invoiceCollection\", function (filter, sort) {\n    if (sort) {\n        return invoices.find(filter, { sort: sort });\n    }\n\n    return invoices.find(filter);\n});\n\nMeteor.methods({ generateInvoices: function () {\n        var total = 100;\n        for (var i = 0; i < total; i++) {\n\n            var curDate = new Date().getTime();\n            var lastMonthDate = new Date();\n            lastMonthDate.setMonth(lastMonthDate.getMonth() - 1);\n            lastMonthDate = lastMonthDate.getTime();\n            var date = new Date(lastMonthDate + Math.random() * (curDate - lastMonthDate));\n            date.setHours(0);\n            date.setMinutes(0);\n            date.setSeconds(0);\n            date.setMilliseconds(0);\n\n            invoices.insert({\n                invoiceNr: Math.floor(Math.random() * (1000000 + 1)),\n                total: Math.floor(Math.random() * (100000 + 1)),\n                createdAt: date\n            });\n        }\n    } });","ast":null,"map":{"version":3,"sources":["/server/invoices.js"],"names":[],"mappings":"AAAA,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC5C,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAS,MAAM,EAAE,IAAI,EAAC;AACtD,QAAG,IAAI,EAAE;AACL,eAAO,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;KAC9C;;AAED,WAAO,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CAChC,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,EAAC,gBAAgB,EAAE,YAAW;AACzC,YAAM,KAAK,GAAG,GAAG,CAAC;AAClB,aAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,KAAK,EAAC,CAAC,EAAE,EAAE;;AAErB,gBAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;AACrC,gBAAI,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;AAC/B,yBAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,CAAC;AACnD,yBAAa,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;AACxC,gBAAI,IAAI,GAAG,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,OAAO,GAAG,aAAa,CAAA,AAAC,CAAC,CAAC;AAC/E,gBAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjB,gBAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACnB,gBAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACnB,gBAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;;AAExB,oBAAQ,CAAC,MAAM,CAAC;AACZ,yBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,OAAO,GAAG,CAAC,CAAA,AAAC,CAAC;AACpD,qBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,MAAM,GAAG,CAAC,CAAA,AAAC,CAAC;AAC/C,yBAAS,EAAE,IAAI;aAClB,CAAC,CAAC;SACN;KACJ,EAAC,CAAC,CAAC","file":"/server/invoices.js.map","sourcesContent":["invoices = new Mongo.Collection(\"invoices\");\r\nMeteor.publish(\"invoiceCollection\", function(filter, sort){\r\n    if(sort) {\r\n        return invoices.find(filter, {sort: sort});\r\n    }\r\n\r\n    return invoices.find(filter);\r\n});\r\n\r\nMeteor.methods({generateInvoices: function() {\r\n    const total = 100;\r\n    for(let i=0;i<total;i++) {\r\n\r\n        const curDate = new Date().getTime();\r\n        let lastMonthDate = new Date();\r\n        lastMonthDate.setMonth(lastMonthDate.getMonth()-1);\r\n        lastMonthDate = lastMonthDate.getTime();\r\n        let date = new Date(lastMonthDate + Math.random() * (curDate - lastMonthDate));\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0);\r\n\r\n        invoices.insert({\r\n            invoiceNr: Math.floor(Math.random() * (1000000 + 1)),\r\n            total: Math.floor(Math.random() * (100000 + 1)),\r\n            createdAt: date\r\n        });\r\n    }\r\n}});"]},"hash":"3046f11a0cb5463f0fc9c5a2264a47bc4a68cf63"}
