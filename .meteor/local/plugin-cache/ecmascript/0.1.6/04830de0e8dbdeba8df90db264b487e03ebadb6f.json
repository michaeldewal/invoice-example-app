{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":["inherits","class-call-check"]},"ignored":false,"code":"var ExtendableErrorClass = (function (_Error) {\n  babelHelpers.inherits(ExtendableErrorClass, _Error);\n\n  function ExtendableErrorClass() {\n    var message = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n    babelHelpers.classCallCheck(this, ExtendableErrorClass);\n\n    _Error.call(this, message);\n\n    // extending Error is weird and does not propagate `message`\n    Object.defineProperty(this, 'message', {\n      enumerable: false,\n      value: message,\n      writable: true\n    });\n\n    Object.defineProperty(this, 'name', {\n      enumerable: false,\n      value: this.constructor.name\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(this, this.constructor);\n      return;\n    }\n\n    Object.defineProperty(this, 'stack', {\n      enumerable: false,\n      value: new Error(message).stack\n    });\n  }\n\n  return ExtendableErrorClass;\n})(Error);\n\nExtendableError = ExtendableErrorClass;","ast":null,"map":{"version":3,"sources":["/source/extendable-error.js"],"names":[],"mappings":"IAAM,oBAAoB;wBAApB,oBAAoB;;AACb,WADP,oBAAoB,GACE;QAAd,OAAO,yDAAG,EAAE;sCADpB,oBAAoB;;AAEtB,sBAAM,OAAO,CAAC,CAAC;;;AAGf,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;AACrC,gBAAU,EAAE,KAAK;AACjB,WAAK,EAAE,OAAO;AACd,cAAQ,EAAE,IAAI;KACf,CAAC,CAAC;;AAEH,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AAClC,gBAAU,EAAE,KAAK;AACjB,WAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;KAC7B,CAAC,CAAC;;AAEH,QAAI,KAAK,CAAC,cAAc,CAAC,mBAAmB,CAAC,EAAE;AAC7C,WAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAChD,aAAO;KACR;;AAED,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;AACnC,gBAAU,EAAE,KAAK;AACjB,WAAK,EAAE,AAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAE,KAAK;KAClC,CAAC,CAAC;GACJ;;SAzBG,oBAAoB;GAAS,KAAK;;AA4BxC,eAAe,GAAG,oBAAoB,CAAC","file":"/source/extendable-error.js.map","sourcesContent":["class ExtendableErrorClass extends Error {\n  constructor(message = '') {\n    super(message);\n\n    // extending Error is weird and does not propagate `message`\n    Object.defineProperty(this, 'message', {\n      enumerable: false,\n      value: message,\n      writable: true\n    });\n\n    Object.defineProperty(this, 'name', {\n      enumerable: false,\n      value: this.constructor.name\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(this, this.constructor);\n      return;\n    }\n\n    Object.defineProperty(this, 'stack', {\n      enumerable: false,\n      value: (new Error(message)).stack\n    });\n  }\n}\n\nExtendableError = ExtendableErrorClass;\n"]},"hash":"04830de0e8dbdeba8df90db264b487e03ebadb6f"}
